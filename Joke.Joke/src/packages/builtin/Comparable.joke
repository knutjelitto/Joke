interface Comparable<A: Comparable<A>> is Equatable<A>

    fun op_lt(that: A): bool
    fun op_le(that: A): bool => lt(that) or eq(that)
    fun op_ge(that: A): bool => not lt(that)
    fun op_gt(that: A): bool => not le(that)

    fun min(that: A): A => if this <= that then this else that end
    fun max(that: A): A => if this >= that then this else that end

    fun compare(that: A): Compare =>
        if this == that then
            Equal
        elseif this < that then
            Less
        else
            Greater
        end


primitive Less is Equatable<Compare>
    fun string(): string => "Less"


primitive Equal is Equatable<Compare>
    fun string(): string => "Equal"


primitive Greater is Equatable<Compare>
    fun string(): string => "Greater"


type Compare is (Less | Equal | Greater)
